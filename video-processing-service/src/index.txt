// this is for locally testing the video processing service in Visual Studio Code using the ThunderClient extension.
// just rename this file to "index.ts" to get started.

import express from 'express';
import ffmpeg from 'fluent-ffmpeg';

import { isExplicit } from './explicit-check';

const app = express();
app.use(express.json());


app.post('/process-video-test', (req, res) => {
    const inputFilePath = req.body.inputFilePath;
    const outputFilePath = req.body.outputFilePath;
    const thumbnailFilePath = req.body.thumbnailFilePath
  
    if (!inputFilePath || !outputFilePath) {
      return res.status(400).send('Bad Request: Missing file path');
    }
  
    // Create the ffmpeg command
    ffmpeg(inputFilePath)
      .outputOptions('-vf', "scale=1280:720:force_original_aspect_ratio=decrease,pad=1280:720:(ow-iw)/2:(oh-ih)/2,setsar=1, drawtext=fontfile=/path/to/font.ttf:text='scaled to 720p via fluent-ffmpeg':fontcolor=white:fontsize=15:box=1:boxcolor=black@0.5:boxorder w=5:x=10:y=h-th-10", '-codec:a', 'copy')
      .on('end', function() {
          console.log('Processing finished successfully');
          res.status(200).send('Processing finished successfully');
      })
      .on('error', function(err: any) {
          console.log('An error occurred: ' + err.message);
          res.status(500).send('An error occurred: ' + err.message);
      })
      .save(outputFilePath);


    ffmpeg(inputFilePath)
      .outputOptions('-vf', "scale=1280:720:force_original_aspect_ratio=decrease,pad=1280:720:(ow-iw)/2:(oh-ih)/2,setsar=1", '-frames:v', '1')
      .on('end', function() {
          console.log('Thumbnail creation finished successfully');
          res.status(200).send('Thumbnail creation finished successfully');
      })
      .on('error', function(err: any) {
          console.log('An error occurred: ' + err.message);
          res.status(500).send('An error occurred: ' + err.message);        
      })
      .save(thumbnailFilePath)

  });
  
app.get('/safecheck-video-test', async (req, res) => {
  // 'gs://narmada-raw-videos/xK0YA39iOrhmFayVFXc4cmpAgPH3-1723662518559-bear.mp4';
  const gcsUri_ = req.body.gcsUri

  if (!gcsUri_){
    return res.status(400).send('Bad Request: Missing gcsUri_');
  }

  const isExplicitFlag = await isExplicit(gcsUri_);

  res.send(isExplicitFlag)
})

const port = process.env.PORT || 3000;
app.listen(port, () => {
    console.log(`Running on ${port}`);
});